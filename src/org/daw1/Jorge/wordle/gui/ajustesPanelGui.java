/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.daw1.Jorge.wordle.gui;

import java.io.File;
import java.util.Arrays;
import org.daw1.Jorge.wordle.IMotores;
import org.daw1.Jorge.wordle.motores.MotorBasesDatos;
import org.daw1.Jorge.wordle.motores.MotorFicheroTexto;
import org.daw1.Jorge.wordle.motores.MotorTest;

/**
 *
 * @author alumno
 */
public class ajustesPanelGui extends javax.swing.JDialog {
    private static final java.awt.Color COLOR_VERDE = new java.awt.Color(51,102,0);
    private static final java.awt.Color COLOR_ROJO = new java.awt.Color(204,0,0);
    private final IMotores tipoMotor;
    private final File ficheroActual;
    /**
     * Creates new form ajustesPanelGui
     * @param parent
     * @param modal
     * @param tipoMotor
     * @param ficheroActual
     */
    public ajustesPanelGui(java.awt.Frame parent, boolean modal, IMotores tipoMotor, File ficheroActual) {
        super(parent, modal);
        this.ficheroActual = ficheroActual;
        this.tipoMotor = tipoMotor;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainjPanel1 = new javax.swing.JPanel();
        titulojPanel = new javax.swing.JPanel();
        titulojLabel = new javax.swing.JLabel();
        cuerpojPanel = new javax.swing.JPanel();
        anadirjPanel = new javax.swing.JPanel();
        insertarjPanel = new javax.swing.JPanel();
        anadirjTextField = new javax.swing.JTextField();
        anadirjButton = new javax.swing.JButton();
        estadoInsertarjPanel = new javax.swing.JPanel();
        estadoInsertarjLabel = new javax.swing.JLabel();
        borrarjPanel = new javax.swing.JPanel();
        borradojPanel = new javax.swing.JPanel();
        borrarjTextField = new javax.swing.JTextField();
        borrarjButton = new javax.swing.JButton();
        estadoBorradojPanel = new javax.swing.JPanel();
        estadoBorrarjLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        mainjPanel1.setLayout(new java.awt.BorderLayout(1, 1));

        titulojPanel.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        titulojPanel.setLayout(new java.awt.GridBagLayout());

        titulojLabel.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        titulojLabel.setText("Gestión Motor");
        titulojPanel.add(titulojLabel, new java.awt.GridBagConstraints());

        mainjPanel1.add(titulojPanel, java.awt.BorderLayout.PAGE_START);

        cuerpojPanel.setLayout(new java.awt.GridLayout(2, 0, 0, 1));

        anadirjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Añadir palabra", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        anadirjPanel.setLayout(new java.awt.GridLayout(2, 0, 0, 1));

        anadirjTextField.setPreferredSize(new java.awt.Dimension(160, 23));
        insertarjPanel.add(anadirjTextField);

        anadirjButton.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        anadirjButton.setText("Añadir");
        anadirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anadirjButtonActionPerformed(evt);
            }
        });
        insertarjPanel.add(anadirjButton);

        anadirjPanel.add(insertarjPanel);

        estadoInsertarjPanel.setLayout(new java.awt.GridBagLayout());
        estadoInsertarjPanel.add(estadoInsertarjLabel, new java.awt.GridBagConstraints());

        anadirjPanel.add(estadoInsertarjPanel);

        cuerpojPanel.add(anadirjPanel);

        borrarjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Borrar palabra", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        borrarjPanel.setLayout(new java.awt.GridLayout(2, 0, 0, 1));

        borrarjTextField.setPreferredSize(new java.awt.Dimension(160, 23));
        borradojPanel.add(borrarjTextField);

        borrarjButton.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        borrarjButton.setText("Borrar");
        borrarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarjButtonActionPerformed(evt);
            }
        });
        borradojPanel.add(borrarjButton);

        borrarjPanel.add(borradojPanel);

        estadoBorradojPanel.setLayout(new java.awt.GridBagLayout());
        estadoBorradojPanel.add(estadoBorrarjLabel, new java.awt.GridBagConstraints());

        borrarjPanel.add(estadoBorradojPanel);

        cuerpojPanel.add(borrarjPanel);

        mainjPanel1.add(cuerpojPanel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainjPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainjPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    private void anadirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anadirjButtonActionPerformed
        if(tipoMotor.getClass() == MotorFicheroTexto.class){
            if(tipoMotor.checkPalabra(this.anadirjTextField.getText()) && !tipoMotor.cargarFichero(ficheroActual).contains(this.anadirjTextField.getText())){
                this.estadoInsertarjLabel.setText("Se ha insertado correctamente.");
                this.estadoInsertarjLabel.setForeground(COLOR_VERDE);
                tipoMotor.addPalabra(this.anadirjTextField.getText());
                
            }
            else if(ficheroActual == null){
                this.estadoInsertarjLabel.setText("El fichero no existe");
                this.estadoInsertarjLabel.setForeground(COLOR_ROJO);
            }    
            else if(!tipoMotor.checkPalabra(this.anadirjTextField.getText())){
                
                this.estadoInsertarjLabel.setText("Error de caracteres");
                this.estadoInsertarjLabel.setForeground(COLOR_ROJO);
            }    
            else{
                this.estadoInsertarjLabel.setText("La palabra existe.");
                this.estadoInsertarjLabel.setForeground(COLOR_ROJO);


            }
        }
        else if(tipoMotor.getClass() == MotorTest.class){
            if(tipoMotor.checkPalabra(this.anadirjTextField.getText())){
                this.estadoInsertarjLabel.setText("Se ha insertado correctamente.");
                this.estadoInsertarjLabel.setForeground(COLOR_VERDE);
            }
            else{
                this.estadoInsertarjLabel.setText("Error de caracteres");
                this.estadoInsertarjLabel.setForeground(COLOR_ROJO);
            }
        }
        else if(tipoMotor.getClass() == MotorBasesDatos.class){
            if(tipoMotor.checkPalabra(this.anadirjTextField.getText()) && !tipoMotor.cargarFichero().contains(this.anadirjTextField.getText().toUpperCase())){
                this.estadoInsertarjLabel.setText("Se ha insertado correctamente.");
                this.estadoInsertarjLabel.setForeground(COLOR_VERDE);
                
                tipoMotor.addPalabra(this.anadirjTextField.getText());
                
                
            }   
            else if(!tipoMotor.checkPalabra(this.anadirjTextField.getText())){                
                this.estadoInsertarjLabel.setText("Error de caracteres");
                this.estadoInsertarjLabel.setForeground(COLOR_ROJO);
            }    
            else{
                this.estadoInsertarjLabel.setText("La palabra existe.");
                this.estadoInsertarjLabel.setForeground(COLOR_ROJO);


            }
        }
    }//GEN-LAST:event_anadirjButtonActionPerformed

    private void borrarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarjButtonActionPerformed
        if(tipoMotor.getClass() == MotorFicheroTexto.class){
            if(tipoMotor.checkPalabra(this.borrarjTextField.getText()) && tipoMotor.cargarFichero(ficheroActual).contains(this.borrarjTextField.getText())){
                this.estadoBorrarjLabel.setText("Se ha borrado correctamente.");
                this.estadoBorrarjLabel.setForeground(COLOR_VERDE);
                tipoMotor.removePalabra(this.borrarjTextField.getText());
                
            }
            else if(ficheroActual == null){
                this.estadoBorrarjLabel.setText("El fichero no existe");
                this.estadoBorrarjLabel.setForeground(COLOR_ROJO);
            }    
            else if(!tipoMotor.checkPalabra(this.borrarjTextField.getText())){
                
                this.estadoBorrarjLabel.setText("Error de caracteres");
                this.estadoBorrarjLabel.setForeground(COLOR_ROJO);
            }    
            else{
                this.estadoBorrarjLabel.setText("La palabra no existe.");
                this.estadoBorrarjLabel.setForeground(COLOR_ROJO);

            }
        }
        else if(tipoMotor.getClass() == MotorTest.class){
            if(tipoMotor.checkPalabra(this.borrarjTextField.getText())){
                this.estadoBorrarjLabel.setText("Se ha borrado correctamente.");
                this.estadoBorrarjLabel.setForeground(COLOR_VERDE);
            }
            else{
                this.estadoBorrarjLabel.setText("Error de caracteres");
                this.estadoBorrarjLabel.setForeground(COLOR_ROJO);
            }
        }
        else if(tipoMotor.getClass() == MotorBasesDatos.class){
             if(tipoMotor.checkPalabra(this.borrarjTextField.getText()) && tipoMotor.cargarFichero().contains(this.borrarjTextField.getText().toUpperCase())){
                this.estadoBorrarjLabel.setText("Se ha borrado correctamente.");
                this.estadoBorrarjLabel.setForeground(COLOR_VERDE);
                
                tipoMotor.removePalabra(this.borrarjTextField.getText());
                
                
            }  
            else if(!tipoMotor.checkPalabra(this.borrarjTextField.getText())){
                
                this.estadoBorrarjLabel.setText("Error de caracteres");
                this.estadoBorrarjLabel.setForeground(COLOR_ROJO);
            }    
            else{
                this.estadoBorrarjLabel.setText("La palabra no existe.");
                this.estadoBorrarjLabel.setForeground(COLOR_ROJO);


            }
        }
    }//GEN-LAST:event_borrarjButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ajustesPanelGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ajustesPanelGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ajustesPanelGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ajustesPanelGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anadirjButton;
    private javax.swing.JPanel anadirjPanel;
    private javax.swing.JTextField anadirjTextField;
    private javax.swing.JPanel borradojPanel;
    private javax.swing.JButton borrarjButton;
    private javax.swing.JPanel borrarjPanel;
    private javax.swing.JTextField borrarjTextField;
    private javax.swing.JPanel cuerpojPanel;
    private javax.swing.JPanel estadoBorradojPanel;
    private javax.swing.JLabel estadoBorrarjLabel;
    private javax.swing.JLabel estadoInsertarjLabel;
    private javax.swing.JPanel estadoInsertarjPanel;
    private javax.swing.JPanel insertarjPanel;
    private javax.swing.JPanel mainjPanel1;
    private javax.swing.JLabel titulojLabel;
    private javax.swing.JPanel titulojPanel;
    // End of variables declaration//GEN-END:variables
}
